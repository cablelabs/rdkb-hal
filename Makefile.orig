#######################################################################
#   Copyright [2014] [Cisco Systems, Inc.]
# 
#   Licensed under the Apache License, Version 2.0 (the \"License\");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
# 
#       http://www.apache.org/licenses/LICENSE-2.0
# 
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an \"AS IS\" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#######################################################################

#
include $(CCSP_ROOT_DIR)/arch/ccsp_common.mk

INCPATH += $(CCSP_ROOT_DIR)/hal/include
CFLAGS += $(addprefix -I,$(INCPATH))


BUILD_HAL_WIFI ?= 1
BUILD_HAL_MOCA ?= 1
BUILD_HAL_CM ?= 1
BUILD_HAL_MTA ?= 1
BUILD_API_DHCPV4C ?= 1
BUILD_HAL_PLATFORM ?= 1
BUILD_HAL_ETHSW ?= 1
BUILD_HAL_VLAN ?= 1

#
#	Set up include directories
#

hal_targets := 

ifeq ($(BUILD_HAL_WIFI),1)
#
#	Hal Wifi
#
target_libhal_wifi := $(ComponentBuildDir)/libhal_wifi.so
source_files_libhal_wifi := $(call add_files_from_board,wifi,'*.c')
obj_files_libhal_wifi := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_wifi:%.c=%.o))
-include $(obj_files_libhal_wifi:.o=.d)

ifneq ($(wildcard $(source_files_libhal_wifi)),)
$(target_libhal_wifi): $(obj_files_libhal_wifi)
hal_targets += $(target_libhal_wifi)
header_targets += include/wifi_hal.h
endif

endif # BUILD_HAL_WIFI

ifeq ($(BUILD_HAL_MOCA),1)
#
#	Hal MoCA
#
target_libhal_moca := $(ComponentBuildDir)/libmoca_mgnt.so
source_files_libhal_moca := $(call add_files_from_board,moca,'*.c')
obj_files_libhal_moca := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_moca:%.c=%.o))
-include $(obj_files_libhal_moca:.o=.d)

ifneq ($(wildcard $(source_files_libhal_moca)),)
$(target_libhal_moca): $(obj_files_libhal_moca)
hal_targets += $(target_libhal_moca)
header_targets += include/moca_hal.h
endif

endif # BUILD_HAL_MOCA

ifeq ($(BUILD_HAL_CM),1)
#
#	Hal CM
#
target_libhal_cm := $(ComponentBuildDir)/libcm_mgnt.so
source_files_libhal_cm := $(call add_files_from_board,cm,'*.c')
obj_files_libhal_cm := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_cm:%.c=%.o))
-include $(obj_files_libhal_cm:.o=.d)

ifneq ($(wildcard $(source_files_libhal_cm)),)
$(target_libhal_cm): $(obj_files_libhal_cm)
hal_targets += $(target_libhal_cm)
header_targets += include/cm_hal.h
endif

endif # BUILD_HAL_CM

ifeq ($(BUILD_HAL_MTA),1)

#
#	Hal MTA
#
target_libhal_mta := $(ComponentBuildDir)/libhal_mta.so
source_files_libhal_mta := $(call add_files_from_board,mta,'*.c')
obj_files_libhal_mta := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_mta:%.c=%.o))
-include $(obj_files_libhal_mta:.o=.d)

ifneq ($(wildcard $(source_files_libhal_mta)),)
$(target_libhal_mta): $(obj_files_libhal_mta)
hal_targets += $(target_libhal_mta)
header_targets += include/mta_hal.h
endif

endif # BUILD_HAL_MTA

ifeq ($(BUILD_API_DHCPV4C),1)
#
#	Hal DhcpV4c
#
target_libapi_dhcpv4c := $(ComponentBuildDir)/libapi_dhcpv4c.so
source_files_libapi_dhcpv4c := $(call add_files_from_board,dhcpv4c,'*.c')
obj_files_libapi_dhcpv4c := $(addprefix $(ComponentBuildDir)/, $(source_files_libapi_dhcpv4c:%.c=%.o))
-include $(obj_files_libapi_dhcpv4c:.o=.d)

ifneq ($(wildcard $(source_files_libapi_dhcpv4c)),)
$(target_libapi_dhcpv4c): $(obj_files_libapi_dhcpv4c)
hal_targets += $(target_libapi_dhcpv4c)
header_targets += include/dhcpv4c_api.h
endif

endif # BUILD_API_DHCPV4C

ifeq ($(BUILD_HAL_PLATFORM),1)

#
#	Hal PLATFORM
#
target_libhal_platform := $(ComponentBuildDir)/libhal_platform.so
source_files_libhal_platform := $(call add_files_from_board,platform,'*.c')
obj_files_libhal_platform := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_platform:%.c=%.o))
-include $(obj_files_libhal_platform:.o=.d)

ifneq ($(wildcard $(source_files_libhal_platform)),)
$(target_libhal_platform): $(obj_files_libhal_platform)
hal_targets += $(target_libhal_platform)
header_targets += include/platform_hal.h
endif

endif # BUILD_HAL_PLATFORM

#
#	Hal EthSw
#
ifeq ($(BUILD_HAL_ETHSW),1)

target_libhal_ethsw := $(ComponentBuildDir)/libhal_ethsw.so
source_files_libhal_ethsw := $(call add_files_from_board,ethsw,'*.c')
obj_files_libhal_ethsw := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_ethsw:%.c=%.o))
-include $(obj_files_libhal_ethsw:.o=.d)

ifneq ($(wildcard $(source_files_libhal_ethsw)),)
$(target_libhal_ethsw): $(obj_files_libhal_ethsw)
hal_targets += $(target_libhal_ethsw)
header_targets += include/ccsp_hal_ethsw.h
endif

endif # BUILD_HAL_ETHSW

ifeq ($(BUILD_HAL_VLAN),1)

#
#	Hal VLAN
#
target_libhal_vlan := $(ComponentBuildDir)/libhal_vlan.so
source_files_libhal_vlan := $(call add_files_from_board,vlan,'*.c')
obj_files_libhal_vlan := $(addprefix $(ComponentBuildDir)/, $(source_files_libhal_vlan:%.c=%.o))
-include $(obj_files_libhal_vlan:.o=.d)

ifneq ($(wildcard $(source_files_libhal_vlan)),)
$(target_libhal_vlan): $(obj_files_libhal_vlan)
hal_targets += $(target_libhal_vlan)
header_targets += include/vlan_hal.h
endif

endif # BUILD_HAL_VLAN


#
#	Build targets
#
all: $(hal_targets) install

clean:
	rm -Rf $(ComponentBuildDir)

install: install_fs stage

install_fs:
ifneq ($(hal_targets),)
	@echo "Installing...[$(hal_targets) to $(CCSP_INSTALL_ROOT)/lib]"
	@[ -d $(CCSP_INSTALL_ROOT)/lib ] || mkdir -p $(CCSP_INSTALL_ROOT)/lib
	@cp -f $(hal_targets) $(CCSP_INSTALL_ROOT)/lib
else
	@echo "Installing...[Nothing]"
endif

stage:
ifneq ($(hal_targets),)
	@echo "Installing...[$(hal_targets) to $(CCSP_STAGING_ROOT)/lib]"
	@[ -d $(CCSP_STAGING_ROOT)/lib ] || mkdir -p $(CCSP_STAGING_ROOT)/lib
	@cp -f $(hal_targets) $(CCSP_STAGING_ROOT)/lib
	@[ -d $(CCSP_STAGING_ROOT)/include ] || mkdir -p $(CCSP_STAGING_ROOT)/include
	@cp -f $(header_targets) $(CCSP_STAGING_ROOT)/include
else
	@echo "Installing...[Nothing]"
endif

.PHONY: all clean install install_fs stage

#
# include custom post makefile, if exists
#
ifneq ($(findstring $(CCSP_CMPNT_BUILD_CUSTOM_MK_POST), $(wildcard $(ComponentBoardDir)/*.mk)), )
    include $(ComponentBoardDir)/$(CCSP_CMPNT_BUILD_CUSTOM_MK_POST)
endif
